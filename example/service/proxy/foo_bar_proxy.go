// Code generated by simple-gen-proxy. DO NOT EDIT.
// source: example/service/foo_bar.go

package proxy

import (
	"context"

	"github.com/ISSuh/simple-gen-proxy/example/dto"

	entity "github.com/ISSuh/simple-gen-proxy/example/entity"

	service "github.com/ISSuh/simple-gen-proxy/example/service"
)

type FooBarProxyTxHelper func(c context.Context, f func(c context.Context) error)

type FooBarProxy struct {
	target service.FooBar
	tx     FooBarProxyTxHelper
}

func NewFooBarProxy(target service.FooBar, tx FooBarProxyTxHelper) *FooBarProxy {
	return &FooBarProxy{
		target: target,
		tx:     tx,
	}
}

func (p *FooBarProxy) Create(_userCtx context.Context, foo dto.Foo, bar dto.Bar) (int, int, error) {
	var (
		r0  int
		r1  int
		err error
	)

	p.tx(_userCtx, func(_helperCtx context.Context) error {
		r0, r1, err = p.target.Create(_helperCtx, foo, bar)
		if err != nil {
			return err
		}
		return nil
	})

	return r0, r1, err
}

func (p *FooBarProxy) Find(_userCtx context.Context, fooID int, barID int) (*entity.Foo, *entity.Bar, error) {
	return p.target.Find(_userCtx, fooID, barID)
}
